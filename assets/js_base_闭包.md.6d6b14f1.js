import{_ as a,o as e,c as t,U as o}from"./chunks/framework.1bc6aac7.js";const m=JSON.parse('{"title":"闭包","description":"","frontmatter":{},"headers":[],"relativePath":"js/base/闭包.md"}'),r={name:"js/base/闭包.md"},l=o('<h1 id="闭包" tabindex="-1">闭包 <a class="header-anchor" href="#闭包" aria-label="Permalink to &quot;闭包&quot;">​</a></h1><h2 id="定义" tabindex="-1">定义 <a class="header-anchor" href="#定义" aria-label="Permalink to &quot;定义&quot;">​</a></h2><p>在函数作用域内执行上下文时，如果内函数引用了外函数的变量，那内函数的作用域里就会新增一个包含这个变量的作用域，这个作用域就称之为闭包</p><h2 id="好处" tabindex="-1">好处 <a class="header-anchor" href="#好处" aria-label="Permalink to &quot;好处&quot;">​</a></h2><ol><li>封装私有化变量，让外部无法访问</li><li>延长局部变量的生命周期</li></ol><h2 id="注意点" tabindex="-1">注意点 <a class="header-anchor" href="#注意点" aria-label="Permalink to &quot;注意点&quot;">​</a></h2><ol><li>如果将内函数返回出去了，那需要及时清除，不然闭包会一直存在。将接受返回的变量置为 null</li></ol>',7),i=[l];function s(n,_,c,h,d,u){return e(),t("div",null,i)}const f=a(r,[["render",s]]);export{m as __pageData,f as default};
