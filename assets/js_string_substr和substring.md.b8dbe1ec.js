import{_ as s,o as t,c as r,U as a}from"./chunks/framework.1bc6aac7.js";const g=JSON.parse('{"title":"substr 和 substring","description":"","frontmatter":{},"headers":[],"relativePath":"js/string/substr和substring.md"}'),e={name:"js/string/substr和substring.md"},n=a('<h1 id="substr-和-substring" tabindex="-1">substr 和 substring <a class="header-anchor" href="#substr-和-substring" aria-label="Permalink to &quot;substr 和 substring&quot;">​</a></h1><h2 id="定义" tabindex="-1">定义 <a class="header-anchor" href="#定义" aria-label="Permalink to &quot;定义&quot;">​</a></h2><p>两者都能截取字符串</p><h2 id="substr" tabindex="-1">substr <a class="header-anchor" href="#substr" aria-label="Permalink to &quot;substr&quot;">​</a></h2><p>在 ECMAScript 2015 中已标记为弃用，str.substr(startIndex, length)</p><ol><li>包头包尾，不改变原字符串，返回截取字符串</li><li>startIndex 为负数，相当于 str.substr(str.length + 负数，负数绝对值)</li></ol><h2 id="substring" tabindex="-1">substring <a class="header-anchor" href="#substring" aria-label="Permalink to &quot;substring&quot;">​</a></h2><p>str.substring(startIndex, endIndex)</p><ol><li>包头不包尾，不改变原字符串，返回截取字符串</li><li>内部会做参数大小比较，将更小的置为 startIndex，大的 endIndex</li><li>startIndex 和 endIndex 相同返回空字符串</li></ol>',9),i=[n];function o(l,u,b,d,c,_){return t(),r("div",null,i)}const p=s(e,[["render",o]]);export{g as __pageData,p as default};
