import{_ as a,o as e,c as r,U as o}from"./chunks/framework.1d5623bb.js";const y=JSON.parse('{"title":"判断是否为数组","description":"","frontmatter":{},"headers":[],"relativePath":"js/array/judgeIsArray.md"}'),t={name:"js/array/judgeIsArray.md"},c=o('<h1 id="判断是否为数组" tabindex="-1">判断是否为数组 <a class="header-anchor" href="#判断是否为数组" aria-label="Permalink to &quot;判断是否为数组&quot;">​</a></h1><h2 id="对象描述符" tabindex="-1">对象描述符 <a class="header-anchor" href="#对象描述符" aria-label="Permalink to &quot;对象描述符&quot;">​</a></h2><p><code>Object.prototype.toString.call(${var})</code>用对象原型转字符串的方式判断，正常情况下如果执行完为<code>[object Array]</code>则为数组</p><h3 id="注意点" tabindex="-1">注意点 <a class="header-anchor" href="#注意点" aria-label="Permalink to &quot;注意点&quot;">​</a></h3><p>如果其他对象类型使用了<code>Symbol.toStringTag</code>修改了默认描述符为<code>Array</code>，是无法判断的。</p><h2 id="原型链" tabindex="-1">原型链 <a class="header-anchor" href="#原型链" aria-label="Permalink to &quot;原型链&quot;">​</a></h2><p><code>${var} instanceof Array</code>判断变量原型链上是否有数组原型，正常情况下为<code>true</code>则为数组</p><h3 id="注意点-1" tabindex="-1">注意点 <a class="header-anchor" href="#注意点-1" aria-label="Permalink to &quot;注意点&quot;">​</a></h3><ol><li>如果其他类型对象使用了<code>Object.setPrototypeOf(${var}, Array.prototype)</code>修改了这个对象原型，是无法正确判断的</li><li>iframe 子应用页面的 Array 和父页面的 Array 是不相等的，所以无法用父页面的数组判断方法去判断子页面的数组</li></ol><h2 id="构造函数-推荐" tabindex="-1">构造函数（推荐） <a class="header-anchor" href="#构造函数-推荐" aria-label="Permalink to &quot;构造函数（推荐）&quot;">​</a></h2><p><code>Array.isArray</code>，声明数组肯定会经过构造函数，构造函数提供了这个方法用来准确判断是否为数组</p>',11),d=[c];function i(l,s,n,h,_,p){return e(),r("div",null,d)}const b=a(t,[["render",i]]);export{y as __pageData,b as default};
