import{_ as e,o as a,c as o,U as t}from"./chunks/framework.1bc6aac7.js";const u=JSON.parse('{"title":"无界微前端方案","description":"","frontmatter":{},"headers":[],"relativePath":"微前端/wujie.md"}'),i={name:"微前端/wujie.md"},s=t('<h1 id="无界微前端方案" tabindex="-1">无界微前端方案 <a class="header-anchor" href="#无界微前端方案" aria-label="Permalink to &quot;无界微前端方案&quot;">​</a></h1><h3 id="优势" tabindex="-1">优势 <a class="header-anchor" href="#优势" aria-label="Permalink to &quot;优势&quot;">​</a></h3><ol><li>使用成本低</li><li>运行快 不仅可以预加载，也提供了类似 fiber 的方式，使用 requestIdleCallback Api 去执行，避免阻塞主应用的渲染进程。同时子应用的 js 在 iframe 执行，子应用通过 proxy + Object.defineproperty 的方式劫持 dom 操作，然后代理到 webcomponent shadowRoot 容器中</li><li>天然的 js、css 隔离</li></ol><ul><li>css 隔离：使用 webcomponent+shadowRoot（attachShadow） 包裹子应用</li><li>js 隔离：使用 iframe 的 js 执行，然后通过代理渲染到 webcomponent shadowRoot 容器中</li></ul><ol start="4"><li>功能强大 包含子应用保活、嵌套、多应用激活、便捷通讯、生命周期、插件系统等</li></ol>',5),l=[s];function r(c,n,_,d,h,p){return a(),o("div",null,l)}const f=e(i,[["render",r]]);export{u as __pageData,f as default};
