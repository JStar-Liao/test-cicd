import{_ as e,o as t,c as a,U as o}from"./chunks/framework.1bc6aac7.js";const m=JSON.parse('{"title":"vue的computed和watch","description":"","frontmatter":{},"headers":[],"relativePath":"面试经验/45-vue的computed和watch.md"}'),c={name:"面试经验/45-vue的computed和watch.md"},r=o('<h1 id="vue的computed和watch" tabindex="-1">vue的computed和watch <a class="header-anchor" href="#vue的computed和watch" aria-label="Permalink to &quot;vue的computed和watch&quot;">​</a></h1><h2 id="watch" tabindex="-1">watch <a class="header-anchor" href="#watch" aria-label="Permalink to &quot;watch&quot;">​</a></h2><ol><li>是一个数据监听属性，数据有变化会触发handle的执行回调函数</li><li>有deep属性可以设置，深度监听元素变化，默认是false， 只监听对象自身，不监听其内元素值改变0，true，监听子属性变化，但还是受制于Object.defineProperty的不监听属性的增加</li><li>不监听未被observer劫持的对象</li></ol><h2 id="computed" tabindex="-1">computed <a class="header-anchor" href="#computed" aria-label="Permalink to &quot;computed&quot;">​</a></h2><ol><li>是一个接收return 数据的变量，内部可以含有被劫持的变量，变量改变，也会触发该函数的get属性，return最新值</li><li>再次引用该变量，如果关联的劫持变量没改变，会从缓存中拿</li><li>内部不能操作异步函数，会提示错误</li><li>有get和set方法，set内可以使用异步函数</li><li>只监听对象自身，不监听其内元素值改变</li></ol>',5),l=[r];function i(d,u,h,n,s,_){return t(),a("div",null,l)}const f=e(c,[["render",i]]);export{m as __pageData,f as default};
