import{_ as a,o as n,c as o,x as e,a as t}from"./chunks/framework.1bc6aac7.js";const v=JSON.parse('{"title":"vue的$nextTick","description":"","frontmatter":{},"headers":[],"relativePath":"面试经验/41-vue的$nextTick.md"}'),c={name:"面试经验/41-vue的$nextTick.md"},s=e("h1",{id:"vue的-nexttick",tabindex:"-1"},[t("vue的$nextTick "),e("a",{class:"header-anchor",href:"#vue的-nexttick","aria-label":'Permalink to "vue的$nextTick"'},"​")],-1),i=e("p",null,"$nextTick 作用：在下次 DOM 更新循环结束之后执行延迟回调。在修改数据之后立即使用这个方法，获取更新后的 DOM。",-1),r=e("h2",{id:"原理",tabindex:"-1"},[t("原理 "),e("a",{class:"header-anchor",href:"#原理","aria-label":'Permalink to "原理"'},"​")],-1),l=e("p",null,"根据eventloop的微任务优先原则，在dom更新完，进入事件队列。$nextTick会根据浏览器的支持程度，判断用那种任务的执行方法包裹回调函数执行，比如promise包裹，Promise.resolve().then(callback),then是微任务，加进微任务队列，然后在事件循环时优先触发，但如果浏览器不支持，就用定时器包裹，在宏任务队列中执行",-1),d=[s,i,r,l];function _(h,x,k,p,u,m){return n(),o("div",null,d)}const f=a(c,[["render",_]]);export{v as __pageData,f as default};
