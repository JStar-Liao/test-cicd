import{_ as s,o as n,c as a,U as l}from"./chunks/framework.1d5623bb.js";const b=JSON.parse('{"title":"spa页面易造成的内存泄露","description":"","frontmatter":{},"headers":[],"relativePath":"面试经验/38-spa页面易造成的内存泄露.md"}'),p={name:"面试经验/38-spa页面易造成的内存泄露.md"},e=l(`<h1 id="spa页面易造成的内存泄露" tabindex="-1">spa页面易造成的内存泄露 <a class="header-anchor" href="#spa页面易造成的内存泄露" aria-label="Permalink to &quot;spa页面易造成的内存泄露&quot;">​</a></h1><p>通常不是来自框架自身，可能出现在：</p><ol><li>组件通过原生方法选择了组件的DOM对象，然后赋值给了组件外的变量，组件销毁后，内存中还保留着选择的组件DOM,但实际DOM已经被销毁了。</li></ol><ul><li>在组件销毁时把组件外的变量赋值为null</li></ul><ol start="2"><li>组件内使用了组件外的方法，并且引用了组件内的函数或者变量，组件销毁后，这些变量和函数还存在内存中</li></ol><ul><li>在组件销毁时把方法解除引用</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#B392F0;">mounted</span><span style="color:#E1E4E8;"> () {</span></span>
<span class="line"><span style="color:#E1E4E8;">    window.</span><span style="color:#B392F0;">addEventListener</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;resize&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.func)</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">beforeDestroy</span><span style="color:#E1E4E8;"> () {</span></span>
<span class="line"><span style="color:#E1E4E8;">    window.</span><span style="color:#B392F0;">removeEventListener</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;resize&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.func)</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">mounted</span><span style="color:#E1E4E8;"> () {</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.$EventBus.</span><span style="color:#B392F0;">$on</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;homeTask&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">res</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">func</span><span style="color:#E1E4E8;">(res))</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">destroyed</span><span style="color:#E1E4E8;"> () {</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.$EventBus.</span><span style="color:#B392F0;">$off</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div>`,7),o=[e];function r(t,c,E,i,y,u){return n(),a("div",null,o)}const d=s(p,[["render",r]]);export{b as __pageData,d as default};
